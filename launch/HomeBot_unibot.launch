<launch>

  <!-- Launch file to start up a HomeBot Bot only (no other system components) for a specified
       service robot type.
       Requires that the "thisBotType" argument is defined to specify the robot to be created -->
       
  <!-- declare arg to be passed in -->
  <arg name="thisBotType" />
  <arg name="sysDoors" />
  <arg name="sysScenes" />
  <arg name="sysShades" />
  
   <remap from="/$(arg thisBotType)/ha_door" to="/ha_door" />
   <remap from="/$(arg thisBotType)/ha_scene" to="/ha_scene" />
   <remap from="/$(arg thisBotType)/ha_shade" to="/ha_shade" />
    
  <group ns="$(arg thisBotType)">
   
   <!-- Start the simulated Bot for this service robot
        Provides a HomeBot_Node with a "move_base" action server to command for movement -->
   <node pkg="homebot" name="FakeMoveBaseServer" type="FakeMoveBaseServer" />
   
   <!-- Start a HomeBot_Node for the HomeBot service robot specified in launch argument BotType
        Provides a service robot with a repertoire of behaviors that can interact with both
        a robot (through "move_base") and a Home Automation system (through the HA Request server) -->
     <node pkg="homebot" name="HomeBot_Node" type="HomeBot_Node"
        args="-doors $(arg sysDoors) -scenes $(arg sysScenes) -shades $(arg sysShades) -botType $(arg thisBotType) -rptFile $(find homebot)/repertoire/$(arg thisBotType).rpt" />     
 
   <!-- Start a HAHomeBotClient_Node
        Provides the interface for a Home Automation system into ROS for setting behavior action goals
        Currently provides a ROS service interface to permit rosservice command line invocation of
        Bot behaviors in place of the actual Home Automation system
        Behaviors are invoked from the command line with "rosservice call /ha_demo "<behavior> <repetitions>" -->      
    <node pkg="homebot" name="HAHomeBotClient_Node" type="HAHomeBotClient_Node" />
  </group>
    
</launch>